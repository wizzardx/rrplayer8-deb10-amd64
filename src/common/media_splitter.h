/***************************************************************************
                          media_splitter.h  -  description
                             -------------------
    begin                : Tue Sep 23 2003
    copyright            : (C) 2003 by David Purdy
    email                : david@radioretail.co.za
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

#ifndef MEDIA_SPLITTER_H
#define MEDIA_SPLITTER_H

/**
  *@author David Purdy
  */

#include <string>

using namespace std;

class media_splitter {
public:
  // Constructor
  media_splitter(const string & strBodyFile, const string & strTempBaseDir);
  // Destructor
  ~media_splitter();
  // Boolean operator
  operator bool(); // This function checks for errors and throws exceptions if there are..!
  void split();
private:
  // Function used internally...
  void split_reset(); // Clear the directories and variables created by split()
public:  
  // Return information about the parts and spaces:
  int get_num_parts();     // Return the number of extracted parts
  int get_num_spaces();  // Returnthe number of spaces discovered.
  bool space_at_begin(); // Was there a space at the very beginning of the body?
  bool space_at_end();    // Was there a space at the very end of the body?
  string get_part_file(const int intpart_num); // Return the path and name to an extracted file.
  int get_space_type(const int intspace_num); // Return the type of a given space that was discovered.
private:
  string strTempDir; // All the work happens here
  string strBodyFile; // Data is extracted from this file.

  // Information generated by the "split" function
  struct split_info_struct {
    // Number of extracted sub-sections
    int intNumExtracted;
    // Number of spaces discovered.
    int intNumSpacesFound;
    // Spaces at the start and end of the Body file?
    bool blnSpaceAtStart;
    bool blnSpaceAtEnd;
  } split_info;
};

#endif
